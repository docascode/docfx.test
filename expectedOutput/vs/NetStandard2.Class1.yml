### YamlMime:ManagedReference
items:
- uid: NetStandard2.Class1
  commentId: T:NetStandard2.Class1
  id: Class1
  parent: NetStandard2
  children:
  - NetStandard2.Class1.#ctor
  - NetStandard2.Class1.#ctor(System.Int32,NetStandard2.Class1@)
  - NetStandard2.Class1.Origin
  langs:
  - csharp
  - vb
  name: Class1
  nameWithType: Class1
  fullName: NetStandard2.Class1
  type: Class
  source:
    remote:
      path: test-projects/NetStandard2/Class1.cs
      branch: master
      repo: https://github.com/docascode/docfx.test.git
    id: Class1
    path: Class1.cs
    startLine: 8
  assemblies:
  - NetStandard2
  namespace: NetStandard2
  summary: "\nC# 7.2 features\n"
  example: []
  syntax:
    content: public class Class1
    content.vb: Public Class Class1
  seealso:
  - linkId: NetStandard2.Enum
    commentId: T:NetStandard2.Enum
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: NetStandard2.Class1.Origin
  commentId: P:NetStandard2.Class1.Origin
  id: Origin
  parent: NetStandard2.Class1
  langs:
  - csharp
  - vb
  name: Origin
  nameWithType: Class1.Origin
  fullName: NetStandard2.Class1.Origin
  type: Property
  source:
    remote:
      path: test-projects/NetStandard2/Class1.cs
      branch: master
      repo: https://github.com/docascode/docfx.test.git
    id: Origin
    path: Class1.cs
    startLine: 12
  assemblies:
  - NetStandard2
  namespace: NetStandard2
  syntax:
    content: public static Class1 Origin { get; }
    parameters: []
    return:
      type: NetStandard2.Class1
    content.vb: Public Shared ReadOnly Property Origin As Class1
  overload: NetStandard2.Class1.Origin*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: NetStandard2.Class1.#ctor
  commentId: M:NetStandard2.Class1.#ctor
  id: '#ctor'
  parent: NetStandard2.Class1
  langs:
  - csharp
  - vb
  name: Class1()
  nameWithType: Class1.Class1()
  fullName: NetStandard2.Class1.Class1()
  type: Constructor
  source:
    remote:
      path: test-projects/NetStandard2/Class1.cs
      branch: master
      repo: https://github.com/docascode/docfx.test.git
    id: .ctor
    path: Class1.cs
    startLine: 14
  assemblies:
  - NetStandard2
  namespace: NetStandard2
  syntax:
    content: public Class1()
    content.vb: Public Sub New
  overload: NetStandard2.Class1.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: NetStandard2.Class1.#ctor(System.Int32,NetStandard2.Class1@)
  commentId: M:NetStandard2.Class1.#ctor(System.Int32,NetStandard2.Class1@)
  id: '#ctor(System.Int32,NetStandard2.Class1@)'
  parent: NetStandard2.Class1
  langs:
  - csharp
  - vb
  name: Class1(Int32, Class1)
  nameWithType: Class1.Class1(Int32, Class1)
  fullName: NetStandard2.Class1.Class1(System.Int32, NetStandard2.Class1)
  type: Constructor
  source:
    remote:
      path: test-projects/NetStandard2/Class1.cs
      branch: master
      repo: https://github.com/docascode/docfx.test.git
    id: .ctor
    path: Class1.cs
    startLine: 18
  assemblies:
  - NetStandard2
  namespace: NetStandard2
  syntax:
    content: public Class1(int i, in Class1 transform)
    parameters:
    - id: i
      type: System.Int32
    - id: transform
      type: NetStandard2.Class1
    content.vb: Public Sub New(i As Integer, ByRef transform As Class1)
  overload: NetStandard2.Class1.#ctor*
  nameWithType.vb: Class1.Class1(Int32, ByRef Class1)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: NetStandard2.Class1.Class1(System.Int32, ByRef NetStandard2.Class1)
  name.vb: Class1(Int32, ByRef Class1)
references:
- uid: NetStandard2.Enum
  commentId: T:NetStandard2.Enum
  isExternal: false
  name: Enum
  nameWithType: Enum
  fullName: NetStandard2.Enum
- uid: NetStandard2
  commentId: N:NetStandard2
  isExternal: false
  name: NetStandard2
  nameWithType: NetStandard2
  fullName: NetStandard2
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: NetStandard2.Class1.Origin*
  commentId: Overload:NetStandard2.Class1.Origin
  isExternal: false
  name: Origin
  nameWithType: Class1.Origin
  fullName: NetStandard2.Class1.Origin
- uid: NetStandard2.Class1
  commentId: T:NetStandard2.Class1
  parent: NetStandard2
  isExternal: false
  name: Class1
  nameWithType: Class1
  fullName: NetStandard2.Class1
- uid: NetStandard2.Class1.#ctor*
  commentId: Overload:NetStandard2.Class1.#ctor
  isExternal: false
  name: Class1
  nameWithType: Class1.Class1
  fullName: NetStandard2.Class1.Class1
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
